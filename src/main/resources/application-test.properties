# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 时区以世界时为主
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dual?useSSL=false&serverTimezone=GMT&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=1111

# 初始化时建立物理连接的个数
spring.datasource.initialSize=5
# 最小连接池数量
spring.datasource.minIdle=5
# 最大连接池数量
spring.datasource.maxActive=20

# 获取连接时等待超时的时间,单位毫秒
spring.datasource.maxWait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle=true

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒，既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.timeBetweenEvictionRunsMillis=60000

# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 用来检测连接是否有效的sql,必须时一个select
# mysql SELECT 'X'
# orcal SELECT 1 FROM DUAL
spring.datasource.validationQuery=SELECT ‘x’

# 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.testOnBorrow=false
# 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.testOnReturn=false

#当数据库抛出不可恢复的异常时,抛弃该连接
spring.datasource.druid.exception-sorter=true

#是否缓存preparedStatement,mysql5.5+建议开启
#Druid官方建议对于MySQL数据库，关闭preparedStatement缓存(即PSCache)，
# 即pool-prepared-statements配置为false。
# 原因是：PSCache对支持游标的数据库性能提升巨大，比如说oracle，在mysql下建议关闭。
#spring.datasource.druid.pool-prepared-statements=true
#当值大于0时poolPreparedStatements会自动修改为true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

#配置监控统计拦截的filters（不配置则监控界面sql无法统计），监控统计filter:stat，日志filter:log4j，防御sql注入filter:wall
spring.datasource.druid.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql(Sql合并)功能；慢SQL记录(配置超过5秒就是慢，默认是3秒)
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
        



